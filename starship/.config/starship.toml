# Which is equivalent to
format = """
$username\
$hostname\
$localip\
$shlvl\
$directory\
$git_state\
$git_status\
$git_metrics\
$fill\
$c\
$cmake\
$cobol\
$daml\
$dart\
$deno\
$dotnet\
$elixir\
$elm\
$erlang\
$fennel\
$golang\
$haskell\
$haxe\
$helm\
$java\
$julia\
$kotlin\
$gradle\
$lua\
$nim\
$nodejs\
$ocaml\
$opa\
$perl\
$php\
$pulumi\
$purescript\
$python\
$raku\
$rlang\
$red\
$ruby\
$rust\
$scala\
$solidity\
$swift\
$terraform\
$vlang\
$vagrant\
$zig\
$buf\
$conda\
$crystal\
$cmd_duration\
$jobs\
$time\
$line_break\
$battery\
$character"""

[fill]
symbol = " "

[character]
success_symbol = '[Û∞òß](bold green) '
error_symbol = '[Û∞òß](bold red) '
vimcmd_symbol = '[Óò´](bold green)'
vimcmd_visual_symbol = '[Óò´](bold yellow)'

[username]
show_always = true
style_user = 'bold blue'

[directory]
truncation_length = 2
truncation_symbol = '‚Ä¶/'

[time]
disabled = false

[git_metrics]
disabled = false

# [git_branch]
# format = 'on [$symbol$branch(:$remote_branch)]($style)'

[git_state]
format = ' \([$state( $progress_current/$progress_total)]($style)\)'

[git_status]
format = '([$stashed$untracked$conflicted$deleted$renamed$modified$staged](bold purple) \[$ahead_behind\]) '
style = 'bold blue'
conflicted = '[ ‚ò°|$count](orange)'
untracked = '[ ‚àâ|$count](white)'
stashed = '[ ‚à©|$count](cyan)'
modified = '[ ‚àÜ|$count](yellow)'
staged = '[ ‚àà|$count](green)'
renamed = '[ œÅ|$count](blue)'
deleted = '[ ‚àñ|$count](red)'
up_to_date = '[‚úì](bold green)'
ahead = '[‚á°|${count}](purple)'
diverged = '‚áï[‚á°|${ahead_count}](purple) [‚á£|${behind_count}](red)'
behind = '[‚á£|${count}](red)'

[battery]
charging_symbol = '‚ö°Ô∏è '

[[battery.display]]
threshold = 10
style = 'bold red'
discharging_symbol = 'ü™´ '

[[battery.display]]
threshold = 20
style = 'bold orange'
discharging_symbol = 'üîå '

# Languages formatted only to symbol
[c]
format = '[$symbol]($style)'

[cmake]
format = '[$symbol]($style)'

[cobol]
format = '[$symbol]($style)'

[daml]
format = '[$symbol]($style)'

[dart]
format = '[$symbol]($style)'

[deno]
format = '[$symbol]($style)'

[dotnet]
format = '[$symbol]($style)'

[elixir]
format = '[$symbol]($style)'

[elm]
format = '[$symbol]($style)'

[erlang]
format = '[$symbol]($style)'

[fennel]
format = '[$symbol]($style)'

[golang]
format = '[$symbol]($style)'

[guix_shell]
format = '[$symbol]($style)'

[haskell]
format = '[$symbol]($style)'

[haxe]
format = '[$symbol]($style)'

[helm]
format = '[$symbol]($style)'

[java]
format = '[$symbol]($style)'

[julia]
format = '[$symbol]($style)'

[kotlin]
format = '[$symbol]($style)'

[gradle]
format = '[$symbol]($style)'

[lua]
format = '[$symbol]($style)'

[nim]
format = '[$symbol]($style)'

[nodejs]
format = '[$symbol]($style)'

[ocaml]
format = '[$symbol]($style)'

[opa]
format = '[$symbol]($style)'

[perl]
format = '[$symbol]($style)'

[php]
format = '[$symbol]($style)'

[pulumi]
format = '[$symbol]($style)'

[purescript]
format = '[$symbol]($style)'

[python]
format = '[(\($virtualenv\) )$symbol]($style)'

[raku]
format = '[$symbol]($style)'

[rlang]
format = '[$symbol]($style)'

[red]
format = '[$symbol]($style)'

[ruby]
format = '[$symbol]($style)'

[rust]
format = '[$symbol]($style)'

[scala]
format = '[$symbol]($style)'

[solidity]
format = '[$symbol]($style)'

[swift]
format = '[$symbol]($style)'
symbol = 'Óùï '

[terraform]
format = '[$symbol]($style)'

[vlang]
format = '[$symbol]($style)'

[vagrant]
format = '[$symbol]($style)'

[zig]
format = '[$symbol]($style)'

[buf]
format = '[$symbol]($style)'

[nix_shell]
format = '[$symbol]($style)'

[conda]
format = '[$symbol]($style)'

[meson]
format = '[$symbol]($style)'

[spack]
format = '[$symbol]($style)'

[aws]
format = '[$symbol]($style)'

[gcloud]
format = '[$symbol]($style)'

[openstack]
format = '[$symbol]($style)'

[azure]
format = '[$symbol]($style)'

[env_var]
format = '[$symbol]($style)'

[crystal]
format = '[$symbol]($style)'
