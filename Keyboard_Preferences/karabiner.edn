{
    ;; !  | means mandatory
    ;; #  | means optional
    ;; !! | mandatory command + control + optional + shift (hyper)
    ;; ## | optional any

    ;; to understand better how modifiers work in karabiner
    ;; karabiner definition of mandatory and optional
    ;; https://pqrs.org/osx/karabiner/json.html#from-event-definition-modifiers

    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | right_control
    ;; E  | right_option
    ;; R  | right_shift
    ;; need to prefix C T O S F with ! or #

:profiles {
    :adudenamedruby {
        :default true
        :sim     50     ;; simultaneous_threshold_milliseconds (def: 50)
                        ;; keys need to be pressed within this threshold to be considered simultaneous
        :delay   1      ;; to_delayed_action_delay_milliseconds (def: 500)
                        ;; basically it means time after which the key press is count delayed
        :alone   1000   ;; to_if_alone_timeout_milliseconds (def: 1000)
                        ;; hold for 995s and single tap registered; hold for 1005s and seen as modifier
        :held    500    ;; to_if_held_down_threshold_milliseconds (def: 500)
                        ;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
    }
} ;; profiles


;; :devices {
;;     :apl-usb-int [{:vendor_id 1452, :product_id 635 }]  ;; Apple Internal & Magic Keyboard (USB)
;;     :apl-bt [{:vendor_id 1452, :product_id 615}] ;; Apple Magic Keyboard (Bluetooth)
;; } ;; devices

;; simlayer
:simlayers {
            :prog-right {:key :f}
            :prog-left {:key :j}
}

;; main contains multiple manipulators
:main [
    ;;{:des "..."                               ;; -> description
    ;; :rules[
    ;;          [<from>  <to>  <conditions> <other options>]    ;; -> rule 1
    ;;          [<from>  <to>  <conditions> <other options>]    ;; -> rule 2
    ;; ]}
    ;;
    ;; <from> can be keywords defined in froms or keycodes without `{:not-from true}`
    ;; <to> can be keywords defined in tos, keycodes without `{:not-to true}` or strings (shell script)
    ;; <conditions> can be keywords defined in layers, devices, applications
    ;; <other options> {:other {:parameters {:to_delayed_action_delay_milliseconds 100 :basic.to_if_alone_timeout_milliseconds 500 :basic.to_if_held_down_threshold_milliseconds 250}} }

    ;; if simplified modifier is used in <to>, optional(#) definition will be ignored.

    ;; (custom variables) & modifiers -> Advanced
    ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#custom-variable
    {
        :des "Caps Lock -> Esc : Control"
        :rules [[:##caps_lock :left_control nil {:alone :escape}]]
    }
    {
        :des "Tab -> Tab : HYPER"
        :rules [[:##tab :!COSleft_control nil {:alone :tab}]]
    }
    {
        :des "Programming Layer (Right)"
        :rules [
                ;; Top row
                [:y :backslash  :prog-right]
                [:u :0  :prog-right]
                [:i :!S6  :prog-right]
                [:o :!S4  :prog-right]
                [:p :backslash  :prog-right]

                ;; Home row
                [:h :!S8  :prog-right]
                [:j :!S0  :prog-right]
                [:k :close_bracket  :prog-right]
                [:l :!Sequal_sign  :prog-right]
                [:semicolon :quote  :prog-right]

                ;; Bottom Row
                [:m :!S1  :prog-right]
                [:comma :!Squote  :prog-right]
                [:period :equal_sign  :prog-right]
                [:slash :!S3  :prog-right]
                ]
    }
    {
        :des "Programming Layer (Left)"
        :rules [
                ;; Top row
                [:q :!Sbackslash  :prog-left]
                [:w :grave_accent_and_tilde  :prog-left]
                [:e :!S2  :prog-left]
                [:r :!S5  :prog-left]
                [:t :!Sbackslash  :prog-left]

                ;; Home row
                [:a :open_bracket  :prog-left]
                [:s :!Shyphen  :prog-left]
                [:d :!Sz  :prog-left]
                [:f :!S9  :prog-left]
                [:g :!Sclose_bracket  :prog-left]

                ;; Bottom Row
                [:z :!Sgrave_accent_and_tilde  :prog-left]
                [:x :hyphen  :prog-left]
                [:c :!S7  :prog-left]
                [:v :!Sopen_bracket  :prog-left]]
     }
    ;; {
    ;;     :des "========= LAYER 3 (Prog Chars - Right Half) =========="
    ;;     :rules [

    ;;           ;;--------- LAYER ACTIVATOR | right_command  -----------
    ;;           [:f ["L3" 1] nil {:afterup ["L3" 0] :alone :f}]

    ;;           ;; Top row
    ;;           [:##y :backslash  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]
    ;;           [:##u :0  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]
    ;;           [:##i :!S6  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]
    ;;           [:##o :!S4  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]
    ;;           [:##p :backslash  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]

    ;;           ;; Home row
    ;;           [:##h :!S8  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]
    ;;           [:##j :!S0  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]
    ;;           [:##k :close_bracket  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]
    ;;           [:##l :!Sequal_sign  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]
    ;;           [:##semicolon :quote  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]

    ;;           ;; Bottom Row
    ;;           [:##m :!S1  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]
    ;;           [:##comma :!Squote  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]
    ;;           [:##period :equal_sign  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]
    ;;           [:##slash :!S3  [["L1" 0] ["L2" 0] ["L3" 1] ["L4" 0]]]
    ;;       ]
    ;;   }
    ;;   {
    ;;     :des "========= LAYER 4 (Prog Chars - Left Half) =========="
    ;;     :rules [

    ;;           ;;--------- LAYER ACTIVATOR | j  -----------
    ;;           [:j ["L4" 1] nil {:afterup ["L4" 0] :alone :j}]

    ;;           ;; Top row
    ;;           [:##q :!Sbackslash  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]
    ;;           [:##w :grave_accent_and_tilde  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]
    ;;           [:##e :!S2  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]
    ;;           [:##r :!S5  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]
    ;;           [:##t :!Sbackslash  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]

    ;;           ;; Home row
    ;;           [:##a :open_bracket  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]
    ;;           [:##s :!Shyphen  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]
    ;;           [:##d :!Sz  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]
    ;;           [:##f :!S9  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]
    ;;           [:##g :!Sclose_bracket  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]

    ;;           ;; Bottom Row
    ;;           [:##z :!Sgrave_accent_and_tilde  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]
    ;;           [:##x :hyphen  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]
    ;;           [:##c :!S7  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]
    ;;           [:##v :!Sopen_bracket  [["L1" 0] ["L2" 0] ["L3" 0] ["L4" 1]]]

    ;;       ]
    ;;   }
      {
        :des "========= LAYER 1 (Prog Chars) =========="
        :rules [

              ;;--------- LAYER ACTIVATOR | right_command  -----------
              [:##right_command ["L1" 1] nil {:afterup ["L1" 0]}]

              ;; Top row
              [:##q :!Sbackslash  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##w :grave_accent_and_tilde  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##e :!S2  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##r :!S5  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##t :!Sbackslash  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##y :backslash  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##u :0  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##i :!S6  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##o :!S4  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##p :backslash  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]

              ;; Home row
              [:##a :open_bracket  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##s :!Shyphen  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##d :!Sz  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##f :!S9  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##g :!Sclose_bracket  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##h :!S8  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##j :!S0  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##k :close_bracket  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##l :!Sequal_sign  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##semicolon :quote  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]

              ;; Bottom Row
              [:##z :!Sgrave_accent_and_tilde  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##x :hyphen  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##c :!S7  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##v :!Sopen_bracket  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##m :!S1  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##comma :!Squote  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##period :equal_sign  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
              [:##slash :!S3  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
          ]
      }
      ;; {
      ;;     :des "========= LAYER 2 () =========="
      ;;     :rules [

      ;;           ;;--------- LAYER ACTIVATOR | right_command  -----------
      ;;           [:##right_option ["L2" 1] nil {:afterup ["L2" 0]}]

      ;;           ;; Top row
      ;;           [:##q :grave_accent_and_tilde  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##w :grave_accent_and_tilde  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##e :!S2  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##r :!S5  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##t :!Sbackslash  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##y :backslash  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##u :0  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##i :!S6  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##o :!S4  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##p :!S4  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]

      ;;           ;; Home row
      ;;           [:##a :open_bracket  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##s :!Shyphen  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##d :!Sz  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##f :!S9  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##g :!Sclose_bracket  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##h :!S8  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##j :!S0  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##k :close_bracket  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##l :!Sequal_sign  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##semicolon :quote  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]

      ;;           ;; Bottom Row
      ;;           [:##z :!Sgrave_accent_and_tilde  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##x :hyphen  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##c :!S7  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##v :!Sopen_bracket  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##m :!S1  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##comma :!Squote  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##period :equal_sign  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;           [:##slash :!S3  [["L1" 1] ["L2" 0] ["L3" 0] ["L4" 0]]]
      ;;       ]
      ;;   }
] ;; main list

}
