{
    ;; !  | means mandatory
    ;; #  | means optional
    ;; !! | mandatory command + control + optional + shift (hyper)
    ;; ## | optional any

    ;; to understand better how modifiers work in karabiner
    ;; karabiner definition of mandatory and optional
    ;; https://pqrs.org/osx/karabiner/json.html#from-event-definition-modifiers

    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | right_control
    ;; E  | right_option
    ;; R  | right_shift
    ;; need to prefix C T O S F with ! or #

:profiles {
    :electricRGB {
        :default true
        :sim     50     ;; simultaneous_threshold_milliseconds (def: 50)
                        ;; keys need to be pressed within this threshold to be considered simultaneous
        :delay   1      ;; to_delayed_action_delay_milliseconds (def: 500)
                        ;; basically it means time after which the key press is count delayed
        :alone   1000    ;; to_if_alone_timeout_milliseconds (def: 1000)
                        ;; hold for 995s and single tap registered; hold for 1005s and seen as modifier
        :held    5000     ;; to_if_held_down_threshold_milliseconds (def: 500)
                        ;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
    }
} ;; profiles

;; :devices {
;;     :apl-usb-int [{:vendor_id 1452, :product_id 635 }]  ;; Apple Internal & Magic Keyboard (USB)
;;     :apl-bt [{:vendor_id 1452, :product_id 615}] ;; Apple Magic Keyboard (Bluetooth)
;; } ;; devices

;; main contains multiple manipulators
:main [

    ;; each manipulator has a description and multiple rules

    ;;{:des "..."                               ;; -> description
    ;; :rules[
    ;;          [<from>  <to>  <conditions> <other options>]    ;; -> rule 1
    ;;          [<from>  <to>  <conditions> <other options>]    ;; -> rule 2
    ;; ]}
    ;;
    ;; <from> can be keywords defined in froms or keycodes without `{:not-from true}`
    ;; <to> can be keywords defined in tos, keycodes without `{:not-to true}` or strings (shell script)
    ;; <conditions> can be keywords defined in layers, devices, applications
    ;; <other options> {:other {:parameters {:to_delayed_action_delay_milliseconds 100 :basic.to_if_alone_timeout_milliseconds 500 :basic.to_if_held_down_threshold_milliseconds 250}} }

    ;; if simplified modifier is used in <to>, optional(#) definition will be ignored.

    ;; (custom variables) & modifiers -> Advanced
    ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#custom-variable

    {
        :des "Caps Lock -> Esc : Control"
        :rules [[:##caps_lock :left_control nil {:alone :escape}]]
    }
    {
        :des "Tab -> Tab : HYPER"
        :rules [[:##tab :!COSleft_control nil {:alone :tab}]]
    }
] ;; main list

}
