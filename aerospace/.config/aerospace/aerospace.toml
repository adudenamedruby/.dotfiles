# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'dvorak'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = [ { monitor."Built-in Retina Display" = 5 }, 5  ]
inner.vertical =   [ { monitor."Built-in Retina Display" = 5 }, 5  ]
outer.left =       [ { monitor."Built-in Retina Display" = 5 }, 10  ]
outer.bottom =     [ { monitor."Built-in Retina Display" = 5 }, 10  ]
outer.top =        [ { monitor."Built-in Retina Display" = 5 }, 10  ]
outer.right =      [ { monitor."Built-in Retina Display" = 5 }, 10  ]

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-3 = 'layout tiles horizontal vertical'
alt-1 = 'layout accordion horizontal'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-6 = 'focus left'
alt-7 = 'focus down'
alt-2 = 'focus up'
alt-8 = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-5 = 'move left'
alt-9 = 'move right'
alt-4 = 'move down'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-minus = 'resize smart -50'
alt-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# Affinity Photo
cmd-shift-ctrl-alt-a = 'workspace A'
alt-shift-a = ['move-node-to-workspace A', 'workspace A']

# Books
cmd-shift-ctrl-alt-b = 'workspace B'
alt-shift-b = ['move-node-to-workspace B', 'workspace B']

# Comms
cmd-shift-ctrl-alt-c = 'workspace C'
alt-shift-c = ['move-node-to-workspace C', 'workspace C']

# Discord
cmd-shift-ctrl-alt-d = 'workspace D'
alt-shift-d = ['move-node-to-workspace D', 'workspace D']

# External Monitor
cmd-shift-ctrl-alt-e = 'workspace E'
alt-shift-e = ['move-node-to-workspace E', 'workspace E']

# ???
# cmd-shift-ctrl-alt-f = 'workspace F'
alt-shift-f = ['move-node-to-workspace F', 'workspace F']

# ???
# cmd-shift-ctrl-alt-g = 'workspace G'
alt-shift-g = ['move-node-to-workspace G', 'workspace G']

# Internet
cmd-shift-ctrl-alt-i = 'workspace I'
alt-shift-i = ['move-node-to-workspace I', 'workspace I']

# ????
# cmd-shift-ctrl-alt-k = 'workspace K'
# alt-shift-k = ['move-node-to-workspace K', 'workspace K']

# Lightroom
cmd-shift-ctrl-alt-l = 'workspace L'
alt-shift-l = ['move-node-to-workspace L', 'workspace L']

# Mail
cmd-shift-ctrl-alt-m = 'workspace M'
alt-shift-m = ['move-node-to-workspace M', 'workspace M']

# Notes
cmd-shift-ctrl-alt-n = 'workspace N'
alt-shift-n = ['move-node-to-workspace N', 'workspace N']

# OBS
cmd-shift-ctrl-alt-o = 'workspace O'
alt-shift-o = ['move-node-to-workspace O', 'workspace O']

# P is 1Password - do not bind

# ???
# cmd-shift-ctrl-alt-q = 'workspace Q'
# alt-shift-q = ['move-node-to-workspace Q', 'workspace Q']

# Realbook
cmd-shift-ctrl-alt-r = 'workspace R'
alt-shift-r = ['move-node-to-workspace R', 'workspace R']

# Schedule
cmd-shift-ctrl-alt-s = 'workspace S'
alt-shift-s = ['move-node-to-workspace S', 'workspace S']

# Terminal
cmd-shift-ctrl-alt-t = 'workspace T'
alt-shift-t = ['move-node-to-workspace T', 'workspace T']

# Utilities
cmd-shift-ctrl-alt-u = 'workspace U'
alt-shift-u = ['move-node-to-workspace U', 'workspace U']

# ???
# cmd-shift-ctrl-alt-v = 'workspace V'
# alt-shift-v = ['move-node-to-workspace V', 'workspace V']

# Xcode
cmd-shift-ctrl-alt-x = 'workspace X'
alt-shift-x = ['move-node-to-workspace X', 'workspace X']

# Music (originally Spotify)
cmd-shift-ctrl-alt-y = 'workspace Y'
alt-shift-y = ['move-node-to-workspace Y', 'workspace Y']

# W & Z are for a secret system shortcut

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-comma = 'move-workspace-to-monitor --wrap-around next'

[workspace-to-monitor-force-assignment]
E = 'secondary'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-0 = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

# alt-shift-h = ['join-with left', 'mode main']
# alt-shift-j = ['join-with down', 'mode main']
# alt-shift-k = ['join-with up', 'mode main']
# alt-shift-l = ['join-with right', 'mode main']
